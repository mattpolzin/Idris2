#include <runtime.h>
/* @generated by Idris 0.7.0-28aed8569, RefC backend */

#include <idris_support.h>


// function definitions
Value *PrimIO_unsafeCreateWorld
(
    Value * var_0
);

Value *PrimIO_unsafePerformIO_0
(
    Value * var_0
,   Value * var_1
);

Value *PrimIO_unsafePerformIO
(
    Value * var_0
);

Value *Prelude_IO_prim__putStr(Value *, Value *);

Value *Prelude_Show_firstCharIs
(
    Value * var_0
,   Value * var_1
);

Value *Prelude_Show_precCon
(
    Value * var_0
);

Value *Prelude_Show_primNumShow_0
(
    Value * var_0
);

Value *Prelude_Show_primNumShow
(
    Value * var_0
,   Value * var_1
,   Value * var_2
);

Value *Prelude_Show_showParens
(
    Value * var_0
,   Value * var_1
);

Value *Prelude_Show__gt_eq_Ord_Prec
(
    Value * var_0
,   Value * var_1
);

Value *Prelude_Show_compare_Ord_Prec
(
    Value * var_0
,   Value * var_1
);

Value *Prelude_Show_showPrec_Show_Int_0
(
    Value * var_0
);

Value *Prelude_Show_showPrec_Show_Int
(
    Value * var_0
,   Value * var_1
);

Value *Prelude_Show_show_Show_Int
(
    Value * var_0
);

Value *Prelude_EqOrd_compareInteger
(
    Value * var_0
,   Value * var_1
);

Value *Prelude_EqOrd__slash_eq_Eq_Ordering
(
    Value * var_0
,   Value * var_1
);

Value *Prelude_EqOrd__lt_Ord_Integer
(
    Value * var_0
,   Value * var_1
);

Value *Prelude_EqOrd__eq_eq_Eq_Char
(
    Value * var_0
,   Value * var_1
);

Value *Prelude_EqOrd__eq_eq_Eq_Integer
(
    Value * var_0
,   Value * var_1
);

Value *Prelude_EqOrd__eq_eq_Eq_Ordering
(
    Value * var_0
,   Value * var_1
);

Value *Prelude_EqOrd_compare_Ord_Integer
(
    Value * var_0
,   Value * var_1
);

Value *Prelude_Types_prim__integerToNat
(
    Value * var_0
);

Value *LotsOfArgs_contrived(Value *var_arglist[19]);

Value *LotsOfArgs_main
(
    Value * var_0
);

Value *prim__sub_Integer
(
    Value * var_0
,   Value * var_1
);

Value *_braceOpen__mainExpression_colon0_braceClose_0
(
    Value * var_0
);

Value *__mainExpression_0(void);

Value *__mainExpression_0(void)
{
    Value *closure_0 = (Value *)idris2_mkClosure((Value *(*)())_braceOpen__mainExpression_colon0_braceClose_0, 1, 0);
    Value * var_0 = closure_0;                               // (Interactive):1:1--1:1
    Value *closure_1 = (Value *)idris2_mkClosure((Value *(*)())PrimIO_unsafePerformIO, 1, 1);
                                                             // (Interactive):1:1--1:1
    ((Value_Closure*)closure_1)->args[0] = var_0;
    return closure_1;
}


Value *_braceOpen__mainExpression_colon0_braceClose_0
(
    Value * var_0
)
{
    Value *closure_2 = (Value *)idris2_mkClosure((Value *(*)())LotsOfArgs_main, 1, 1);
    ((Value_Closure*)closure_2)->args[0] = var_0;
    return closure_2;
}


Value *prim__sub_Integer
(
    Value * var_0
,   Value * var_1
)
{
    Value *primVar_3 = idris2_sub_Integer(var_0, var_1);
    idris2_removeReference(var_0);
    idris2_removeReference(var_1);
    return primVar_3;
}


Value *LotsOfArgs_main
(
    Value * var_0
)
{
    Value * var_1 = idris2_mkInt64(INT64_C(0));              // LotsOfArgs:14:3--14:12
    Value * var_2 = idris2_mkInt64(INT64_C(0));              // LotsOfArgs:14:3--14:12
    Value * var_3 = idris2_mkInt64(INT64_C(1));              // LotsOfArgs:14:3--14:12
    Value * var_4 = idris2_mkInt64(INT64_C(0));              // LotsOfArgs:14:3--14:12
    Value * var_5 = idris2_mkInt64(INT64_C(0));              // LotsOfArgs:14:3--14:12
    Value * var_6 = idris2_mkInt64(INT64_C(1));              // LotsOfArgs:14:3--14:12
    Value * var_7 = idris2_mkInt64(INT64_C(0));              // LotsOfArgs:14:3--14:12
    Value * var_8 = idris2_mkInt64(INT64_C(0));              // LotsOfArgs:14:3--14:12
    Value * var_9 = idris2_mkInt64(INT64_C(1));              // LotsOfArgs:14:3--14:12
    Value * var_10 = idris2_mkInt64(INT64_C(0));             // LotsOfArgs:14:3--14:12
    Value * var_11 = idris2_mkInt64(INT64_C(0));             // LotsOfArgs:14:3--14:12
    Value * var_12 = idris2_mkInt64(INT64_C(0));             // LotsOfArgs:14:3--14:12
    Value * var_13 = idris2_mkInt64(INT64_C(0));             // LotsOfArgs:14:3--14:12
    Value * var_14 = idris2_mkInt64(INT64_C(1));             // LotsOfArgs:14:3--14:12
    Value * var_15 = idris2_mkInt64(INT64_C(0));             // LotsOfArgs:14:3--14:12
    Value * var_16 = idris2_mkInt64(INT64_C(0));             // LotsOfArgs:14:3--14:12
    Value * var_17 = idris2_mkInt64(INT64_C(0));             // LotsOfArgs:14:3--14:12
    Value * var_18 = idris2_mkInt64(INT64_C(0));             // LotsOfArgs:14:3--14:12
    Value * var_19 = idris2_mkInt64(INT64_C(1));             // LotsOfArgs:14:3--14:12
    Value *closure_4 = (Value *)idris2_mkClosure((Value *(*)())LotsOfArgs_contrived, 19, 19);
                                                             // LotsOfArgs:14:3--14:12
    ((Value_Closure*)closure_4)->args[0] = var_1;
    ((Value_Closure*)closure_4)->args[1] = var_2;
    ((Value_Closure*)closure_4)->args[2] = var_3;
    ((Value_Closure*)closure_4)->args[3] = var_4;
    ((Value_Closure*)closure_4)->args[4] = var_5;
    ((Value_Closure*)closure_4)->args[5] = var_6;
    ((Value_Closure*)closure_4)->args[6] = var_7;
    ((Value_Closure*)closure_4)->args[7] = var_8;
    ((Value_Closure*)closure_4)->args[8] = var_9;
    ((Value_Closure*)closure_4)->args[9] = var_10;
    ((Value_Closure*)closure_4)->args[10] = var_11;
    ((Value_Closure*)closure_4)->args[11] = var_12;
    ((Value_Closure*)closure_4)->args[12] = var_13;
    ((Value_Closure*)closure_4)->args[13] = var_14;
    ((Value_Closure*)closure_4)->args[14] = var_15;
    ((Value_Closure*)closure_4)->args[15] = var_16;
    ((Value_Closure*)closure_4)->args[16] = var_17;
    ((Value_Closure*)closure_4)->args[17] = var_18;
    ((Value_Closure*)closure_4)->args[18] = var_19;
    Value * var_20 = idris2_trampoline(closure_4);           // Prelude.Show:106:1--108:46
    Value * var_21 = idris2_trampoline(Prelude_Show_show_Show_Int(var_20));
    Value * var_22 = (Value*)idris2_mkString("\x0a""");
    Value *primVar_5 = strAppend(var_21, var_22);
    idris2_removeReference(var_21);
    idris2_removeReference(var_22);
    Value * var_23 = primVar_5;                              // Prelude.IO:98:22--98:34
    Value *closure_6 = (Value *)idris2_mkClosure((Value *(*)())Prelude_IO_prim__putStr, 2, 2);
                                                             // Prelude.IO:98:22--98:34
    ((Value_Closure*)closure_6)->args[0] = var_23;
    ((Value_Closure*)closure_6)->args[1] = var_0;
    return closure_6;
}


Value *LotsOfArgs_contrived(Value *var_arglist[19])
{
    Value *var_0 = var_arglist[0];
    Value *var_1 = var_arglist[1];
    Value *var_2 = var_arglist[2];
    Value *var_3 = var_arglist[3];
    Value *var_4 = var_arglist[4];
    Value *var_5 = var_arglist[5];
    Value *var_6 = var_arglist[6];
    Value *var_7 = var_arglist[7];
    Value *var_8 = var_arglist[8];
    Value *var_9 = var_arglist[9];
    Value *var_10 = var_arglist[10];
    Value *var_11 = var_arglist[11];
    Value *var_12 = var_arglist[12];
    Value *var_13 = var_arglist[13];
    Value *var_14 = var_arglist[14];
    Value *var_15 = var_arglist[15];
    Value *var_16 = var_arglist[16];
    Value *var_17 = var_arglist[17];
    Value *var_18 = var_arglist[18];
    Value *primVar_7 = idris2_add_Int64(var_0, var_1);
    idris2_removeReference(var_0);
    idris2_removeReference(var_1);
    Value * var_19 = primVar_7;
    Value *primVar_8 = idris2_add_Int64(var_19, var_2);
    idris2_removeReference(var_19);
    idris2_removeReference(var_2);
    Value * var_20 = primVar_8;
    Value *primVar_9 = idris2_add_Int64(var_20, var_3);
    idris2_removeReference(var_20);
    idris2_removeReference(var_3);
    Value * var_21 = primVar_9;
    Value *primVar_10 = idris2_add_Int64(var_21, var_4);
    idris2_removeReference(var_21);
    idris2_removeReference(var_4);
    Value * var_22 = primVar_10;
    Value *primVar_11 = idris2_add_Int64(var_22, var_5);
    idris2_removeReference(var_22);
    idris2_removeReference(var_5);
    Value * var_23 = primVar_11;
    Value *primVar_12 = idris2_add_Int64(var_23, var_6);
    idris2_removeReference(var_23);
    idris2_removeReference(var_6);
    Value * var_24 = primVar_12;
    Value *primVar_13 = idris2_add_Int64(var_24, var_7);
    idris2_removeReference(var_24);
    idris2_removeReference(var_7);
    Value * var_25 = primVar_13;
    Value *primVar_14 = idris2_add_Int64(var_25, var_8);
    idris2_removeReference(var_25);
    idris2_removeReference(var_8);
    Value * var_26 = primVar_14;
    Value *primVar_15 = idris2_add_Int64(var_26, var_9);
    idris2_removeReference(var_26);
    idris2_removeReference(var_9);
    Value * var_27 = primVar_15;
    Value *primVar_16 = idris2_add_Int64(var_27, var_10);
    idris2_removeReference(var_27);
    idris2_removeReference(var_10);
    Value * var_28 = primVar_16;
    Value *primVar_17 = idris2_add_Int64(var_28, var_11);
    idris2_removeReference(var_28);
    idris2_removeReference(var_11);
    Value * var_29 = primVar_17;
    Value *primVar_18 = idris2_add_Int64(var_29, var_12);
    idris2_removeReference(var_29);
    idris2_removeReference(var_12);
    Value * var_30 = primVar_18;
    Value *primVar_19 = idris2_add_Int64(var_30, var_13);
    idris2_removeReference(var_30);
    idris2_removeReference(var_13);
    Value * var_31 = primVar_19;
    Value *primVar_20 = idris2_add_Int64(var_31, var_14);
    idris2_removeReference(var_31);
    idris2_removeReference(var_14);
    Value * var_32 = primVar_20;
    Value *primVar_21 = idris2_add_Int64(var_32, var_15);
    idris2_removeReference(var_32);
    idris2_removeReference(var_15);
    Value * var_33 = primVar_21;
    Value *primVar_22 = idris2_add_Int64(var_33, var_16);
    idris2_removeReference(var_33);
    idris2_removeReference(var_16);
    Value * var_34 = primVar_22;
    Value *primVar_23 = idris2_add_Int64(var_34, var_17);
    idris2_removeReference(var_34);
    idris2_removeReference(var_17);
    Value * var_35 = primVar_23;
    Value *primVar_24 = idris2_add_Int64(var_35, var_18);
    idris2_removeReference(var_35);
    idris2_removeReference(var_18);
    return primVar_24;
}


Value *Prelude_Types_prim__integerToNat
(
    Value * var_0
)
{
    Value * var_1 = (Value*)idris2_mkIntegerLiteral("0");
    Value *primVar_25 = idris2_lte_Integer(var_1, idris2_newReference(var_0));
    idris2_removeReference(var_1);
    idris2_removeReference(var_0);
    Value * var_2 = primVar_25;                              // Prelude.Basics:177:13--177:16
    Value *tmp_26 = NULL;                                    // Prelude.Basics:177:13--177:16
    int64_t tmp_27 = idris2_extractInt(var_2);
    if (tmp_27 == INT64_C(0)) {
        idris2_removeReference(var_0);
        idris2_removeReference(var_2);
        tmp_26 = (Value*)idris2_mkIntegerLiteral("0");
    } else {
        idris2_removeReference(var_2);
        tmp_26 = var_0;
    }
    return tmp_26;
}


Value *Prelude_EqOrd_compare_Ord_Integer
(
    Value * var_0
,   Value * var_1
)
{
    Value * var_3 = idris2_trampoline(Prelude_EqOrd__lt_Ord_Integer(idris2_newReference(var_0), idris2_newReference(var_1)));
                                                             // Prelude.EqOrd:121:21--121:25
    Value *tmp_28 = NULL;                                    // Prelude.EqOrd:121:21--121:25
    int64_t tmp_29 = idris2_extractInt(var_3);
    if (tmp_29 == UINT8_C(1)) {
        idris2_removeReference(var_0);
        idris2_removeReference(var_1);
        idris2_removeReference(var_3);
        tmp_28 = idris2_mkBits8(UINT8_C(0));
    } else if (tmp_29 == UINT8_C(0)) {
        idris2_removeReference(var_3);
        Value * var_2 = idris2_trampoline(Prelude_EqOrd__eq_eq_Eq_Integer(var_0, var_1));
                                                             // Prelude.EqOrd:18:22--18:26
        Value *tmp_30 = NULL;                                // Prelude.EqOrd:18:22--18:26
        int64_t tmp_31 = idris2_extractInt(var_2);
        if (tmp_31 == UINT8_C(1)) {
            idris2_removeReference(var_2);
            tmp_30 = idris2_mkBits8(UINT8_C(1));
        } else if (tmp_31 == UINT8_C(0)) {
            idris2_removeReference(var_2);
            tmp_30 = idris2_mkBits8(UINT8_C(2));
        }
        tmp_28 = tmp_30;
    }
    return tmp_28;
}


Value *Prelude_EqOrd__eq_eq_Eq_Ordering
(
    Value * var_0
,   Value * var_1
)
{
    Value *tmp_32 = NULL;                                    // Prelude.EqOrd:105:4--105:12
    int64_t tmp_33 = idris2_extractInt(var_0);
    if (tmp_33 == UINT8_C(0)) {
        idris2_removeReference(var_0);
        Value *tmp_34 = NULL;                                // Prelude.EqOrd:105:4--105:12
        int64_t tmp_35 = idris2_extractInt(var_1);
        if (tmp_35 == UINT8_C(0)) {
            idris2_removeReference(var_1);
            tmp_34 = idris2_mkBits8(UINT8_C(1));
        } else {
            idris2_removeReference(var_1);
            tmp_34 = idris2_mkBits8(UINT8_C(0));
        }
        tmp_32 = tmp_34;
    } else if (tmp_33 == UINT8_C(1)) {
        idris2_removeReference(var_0);
        Value *tmp_36 = NULL;                                // Prelude.EqOrd:105:4--105:12
        int64_t tmp_37 = idris2_extractInt(var_1);
        if (tmp_37 == UINT8_C(1)) {
            idris2_removeReference(var_1);
            tmp_36 = idris2_mkBits8(UINT8_C(1));
        } else {
            idris2_removeReference(var_1);
            tmp_36 = idris2_mkBits8(UINT8_C(0));
        }
        tmp_32 = tmp_36;
    } else if (tmp_33 == UINT8_C(2)) {
        idris2_removeReference(var_0);
        Value *tmp_38 = NULL;                                // Prelude.EqOrd:105:4--105:12
        int64_t tmp_39 = idris2_extractInt(var_1);
        if (tmp_39 == UINT8_C(2)) {
            idris2_removeReference(var_1);
            tmp_38 = idris2_mkBits8(UINT8_C(1));
        } else {
            idris2_removeReference(var_1);
            tmp_38 = idris2_mkBits8(UINT8_C(0));
        }
        tmp_32 = tmp_38;
    } else {
        idris2_removeReference(var_0);
        idris2_removeReference(var_1);
        tmp_32 = idris2_mkBits8(UINT8_C(0));
    }
    return tmp_32;
}


Value *Prelude_EqOrd__eq_eq_Eq_Integer
(
    Value * var_0
,   Value * var_1
)
{
    Value *primVar_40 = idris2_eq_Integer(var_0, var_1);
    idris2_removeReference(var_0);
    idris2_removeReference(var_1);
    Value * var_2 = primVar_40;                              // Prelude.Basics:177:13--177:16
    Value *tmp_41 = NULL;                                    // Prelude.Basics:177:13--177:16
    int64_t tmp_42 = idris2_extractInt(var_2);
    if (tmp_42 == INT64_C(0)) {
        idris2_removeReference(var_2);
        tmp_41 = idris2_mkBits8(UINT8_C(0));
    } else {
        idris2_removeReference(var_2);
        tmp_41 = idris2_mkBits8(UINT8_C(1));
    }
    return tmp_41;
}


Value *Prelude_EqOrd__eq_eq_Eq_Char
(
    Value * var_0
,   Value * var_1
)
{
    Value *primVar_43 = idris2_eq_Char(var_0, var_1);
    idris2_removeReference(var_0);
    idris2_removeReference(var_1);
    Value * var_2 = primVar_43;                              // Prelude.Basics:177:13--177:16
    Value *tmp_44 = NULL;                                    // Prelude.Basics:177:13--177:16
    int64_t tmp_45 = idris2_extractInt(var_2);
    if (tmp_45 == INT64_C(0)) {
        idris2_removeReference(var_2);
        tmp_44 = idris2_mkBits8(UINT8_C(0));
    } else {
        idris2_removeReference(var_2);
        tmp_44 = idris2_mkBits8(UINT8_C(1));
    }
    return tmp_44;
}


Value *Prelude_EqOrd__lt_Ord_Integer
(
    Value * var_0
,   Value * var_1
)
{
    Value *primVar_46 = idris2_lt_Integer(var_0, var_1);
    idris2_removeReference(var_0);
    idris2_removeReference(var_1);
    Value * var_2 = primVar_46;                              // Prelude.Basics:177:13--177:16
    Value *tmp_47 = NULL;                                    // Prelude.Basics:177:13--177:16
    int64_t tmp_48 = idris2_extractInt(var_2);
    if (tmp_48 == INT64_C(0)) {
        idris2_removeReference(var_2);
        tmp_47 = idris2_mkBits8(UINT8_C(0));
    } else {
        idris2_removeReference(var_2);
        tmp_47 = idris2_mkBits8(UINT8_C(1));
    }
    return tmp_47;
}


Value *Prelude_EqOrd__slash_eq_Eq_Ordering
(
    Value * var_0
,   Value * var_1
)
{
    Value * var_2 = idris2_trampoline(Prelude_EqOrd__eq_eq_Eq_Ordering(var_0, var_1));
                                                             // Prelude.Basics:150:12--150:16
    Value *tmp_49 = NULL;                                    // Prelude.Basics:150:12--150:16
    int64_t tmp_50 = idris2_extractInt(var_2);
    if (tmp_50 == UINT8_C(1)) {
        idris2_removeReference(var_2);
        tmp_49 = idris2_mkBits8(UINT8_C(0));
    } else if (tmp_50 == UINT8_C(0)) {
        idris2_removeReference(var_2);
        tmp_49 = idris2_mkBits8(UINT8_C(1));
    }
    return tmp_49;
}


Value *Prelude_EqOrd_compareInteger
(
    Value * var_0
,   Value * var_1
)
{
    Value *closure_51 = (Value *)idris2_mkClosure((Value *(*)())Prelude_EqOrd_compare_Ord_Integer, 2, 2);
                                                             // Prelude.EqOrd:174:1--179:47
    ((Value_Closure*)closure_51)->args[0] = var_0;
    ((Value_Closure*)closure_51)->args[1] = var_1;
    return closure_51;
}


Value *Prelude_Show_show_Show_Int
(
    Value * var_0
)
{
     // constructor Prelude.Show.Open                        // Prelude.Show:106:1--108:46
    Value_Constructor* constructor_52 = idris2_newConstructor(0, 0);
                                                             // Prelude.Show:106:1--108:46
    Value * var_1 = (Value*)constructor_52;                  // Prelude.Show:106:1--108:46
    Value *closure_53 = (Value *)idris2_mkClosure((Value *(*)())Prelude_Show_showPrec_Show_Int, 2, 2);
                                                             // Prelude.Show:106:1--108:46
    ((Value_Closure*)closure_53)->args[0] = var_1;
    ((Value_Closure*)closure_53)->args[1] = var_0;
    return closure_53;
}


Value *Prelude_Show_showPrec_Show_Int
(
    Value * var_0
,   Value * var_1
)
{
    Value *closure_54 = (Value *)idris2_mkClosure((Value *(*)())Prelude_Show_showPrec_Show_Int_0, 1, 0);
                                                             // Prelude.Show:108:26--108:46
    Value * var_2 = closure_54;                              // Prelude.Show:108:14--108:25
    Value *closure_55 = (Value *)idris2_mkClosure((Value *(*)())Prelude_Show_primNumShow, 3, 3);
                                                             // Prelude.Show:108:14--108:25
    ((Value_Closure*)closure_55)->args[0] = var_2;
    ((Value_Closure*)closure_55)->args[1] = var_0;
    ((Value_Closure*)closure_55)->args[2] = var_1;
    return closure_55;
}


Value *Prelude_Show_showPrec_Show_Int_0
(
    Value * var_0
)
{
    Value *primVar_56 = idris2_cast_Int64_to_string(var_0);
    idris2_removeReference(var_0);
    return primVar_56;
}


Value *Prelude_Show_compare_Ord_Prec
(
    Value * var_0
,   Value * var_1
)
{
    Value * tmp_57 = NULL;                                   // Prelude.Show:37:5--37:9
    if (((Value_Constructor *)var_0)->tag == 4 /* Prelude.Show.User */) {
        Value *var_2 = ((Value_Constructor*)var_0)->args[0];
        idris2_newReference(var_2);
        Value * tmp_58 = NULL;                               // Prelude.Show:37:5--37:9
        if (((Value_Constructor *)var_1)->tag == 4 /* Prelude.Show.User */) {
            Value *var_3 = ((Value_Constructor*)var_1)->args[0];
            idris2_newReference(var_3);
            idris2_removeReference(var_0);
            idris2_removeReference(var_1);
            Value *closure_59 = (Value *)idris2_mkClosure((Value *(*)())Prelude_EqOrd_compare_Ord_Integer, 2, 2);
                                                             // Prelude.EqOrd:174:1--179:47
            ((Value_Closure*)closure_59)->args[0] = var_2;
            ((Value_Closure*)closure_59)->args[1] = var_3;
            tmp_58 = closure_59;
        } else {
            idris2_removeReference(var_2);
            Value * var_4 = idris2_trampoline(Prelude_Show_precCon(var_0));
            Value * var_5 = idris2_trampoline(Prelude_Show_precCon(var_1));
            Value *closure_60 = (Value *)idris2_mkClosure((Value *(*)())Prelude_EqOrd_compare_Ord_Integer, 2, 2);
            ((Value_Closure*)closure_60)->args[0] = var_4;
            ((Value_Closure*)closure_60)->args[1] = var_5;
            tmp_58 = closure_60;
        }
        tmp_57 = tmp_58;
    } else {
        Value * var_6 = idris2_trampoline(Prelude_Show_precCon(var_0));
        Value * var_7 = idris2_trampoline(Prelude_Show_precCon(var_1));
        Value *closure_61 = (Value *)idris2_mkClosure((Value *(*)())Prelude_EqOrd_compare_Ord_Integer, 2, 2);
        ((Value_Closure*)closure_61)->args[0] = var_6;
        ((Value_Closure*)closure_61)->args[1] = var_7;
        tmp_57 = closure_61;
    }
    return tmp_57;
}


Value *Prelude_Show__gt_eq_Ord_Prec
(
    Value * var_0
,   Value * var_1
)
{
    Value * var_2 = idris2_trampoline(Prelude_Show_compare_Ord_Prec(var_0, var_1));
    Value * var_3 = idris2_mkBits8(UINT8_C(0));
    Value *closure_62 = (Value *)idris2_mkClosure((Value *(*)())Prelude_EqOrd__slash_eq_Eq_Ordering, 2, 2);
    ((Value_Closure*)closure_62)->args[0] = var_2;
    ((Value_Closure*)closure_62)->args[1] = var_3;
    return closure_62;
}


Value *Prelude_Show_showParens
(
    Value * var_0
,   Value * var_1
)
{
    Value *tmp_63 = NULL;                                    // Prelude.Show:71:19--71:23
    int64_t tmp_64 = idris2_extractInt(var_0);
    if (tmp_64 == UINT8_C(0)) {
        idris2_removeReference(var_0);
        tmp_63 = var_1;
    } else if (tmp_64 == UINT8_C(1)) {
        idris2_removeReference(var_0);
        Value * var_3 = (Value*)idris2_mkString("(");
        Value * var_2 = (Value*)idris2_mkString(")");
        Value *primVar_65 = strAppend(var_1, var_2);
        idris2_removeReference(var_1);
        idris2_removeReference(var_2);
        Value * var_4 = primVar_65;
        Value *primVar_66 = strAppend(var_3, var_4);
        idris2_removeReference(var_3);
        idris2_removeReference(var_4);
        tmp_63 = primVar_66;
    }
    return tmp_63;
}


Value *Prelude_Show_primNumShow
(
    Value * var_0
,   Value * var_1
,   Value * var_2
)
{
    Value * var_3 = idris2_apply_closure(var_0, var_2);      // Prelude.Show:104:25--104:34
     // constructor Prelude.Show.PrefixMinus                 // Prelude.Show:104:55--104:66
    Value_Constructor* constructor_67 = idris2_newConstructor(0, 5);
                                                             // Prelude.Show:104:55--104:66
    Value * var_4 = (Value*)constructor_67;                  // Prelude.Show:36:1--39:62
    Value * var_6 = idris2_trampoline(Prelude_Show__gt_eq_Ord_Prec(var_1, var_4));
                                                             // Prelude.Basics:157:13--157:17
    Value *tmp_68 = NULL;                                    // Prelude.Basics:157:13--157:17
    int64_t tmp_69 = idris2_extractInt(var_6);
    if (tmp_69 == UINT8_C(1)) {
        idris2_removeReference(var_6);
        Value *closure_70 = (Value *)idris2_mkClosure((Value *(*)())Prelude_Show_primNumShow_0, 1, 0);
                                                             // Prelude.Show:104:82--104:90
        Value * var_5 = closure_70;                          // Prelude.Show:104:70--104:81
        tmp_68 = idris2_trampoline(Prelude_Show_firstCharIs(var_5, idris2_newReference(var_3)));
    } else if (tmp_69 == UINT8_C(0)) {
        idris2_removeReference(var_6);
        tmp_68 = idris2_mkBits8(UINT8_C(0));
    }
    Value * var_7 = tmp_68;                                  // Prelude.Show:104:38--104:48
    Value *closure_71 = (Value *)idris2_mkClosure((Value *(*)())Prelude_Show_showParens, 2, 2);
                                                             // Prelude.Show:104:38--104:48
    ((Value_Closure*)closure_71)->args[0] = var_7;
    ((Value_Closure*)closure_71)->args[1] = var_3;
    return closure_71;
}


Value *Prelude_Show_primNumShow_0
(
    Value * var_0
)
{
    Value * var_1 = idris2_mkChar((char)45);
    Value *closure_72 = (Value *)idris2_mkClosure((Value *(*)())Prelude_EqOrd__eq_eq_Eq_Char, 2, 2);
    ((Value_Closure*)closure_72)->args[0] = var_0;
    ((Value_Closure*)closure_72)->args[1] = var_1;
    return closure_72;
}


Value *Prelude_Show_precCon
(
    Value * var_0
)
{
    Value * tmp_73 = NULL;                                   // Prelude.Show:22:11--22:15
    if (((Value_Constructor *)var_0)->tag == 0 /* Prelude.Show.Open */) {
        idris2_removeReference(var_0);
        tmp_73 = (Value*)idris2_mkIntegerLiteral("0");
    } else if (((Value_Constructor *)var_0)->tag == 1 /* Prelude.Show.Equal */) {
        idris2_removeReference(var_0);
        tmp_73 = (Value*)idris2_mkIntegerLiteral("1");
    } else if (((Value_Constructor *)var_0)->tag == 2 /* Prelude.Show.Dollar */) {
        idris2_removeReference(var_0);
        tmp_73 = (Value*)idris2_mkIntegerLiteral("2");
    } else if (((Value_Constructor *)var_0)->tag == 3 /* Prelude.Show.Backtick */) {
        idris2_removeReference(var_0);
        tmp_73 = (Value*)idris2_mkIntegerLiteral("3");
    } else if (((Value_Constructor *)var_0)->tag == 4 /* Prelude.Show.User */) {
        Value *var_1 = ((Value_Constructor*)var_0)->args[0];
        idris2_removeReference(var_0);
        tmp_73 = (Value*)idris2_mkIntegerLiteral("4");
    } else if (((Value_Constructor *)var_0)->tag == 5 /* Prelude.Show.PrefixMinus */) {
        idris2_removeReference(var_0);
        tmp_73 = (Value*)idris2_mkIntegerLiteral("5");
    } else if (((Value_Constructor *)var_0)->tag == 6 /* Prelude.Show.App */) {
        idris2_removeReference(var_0);
        tmp_73 = (Value*)idris2_mkIntegerLiteral("6");
    }
    return tmp_73;
}


Value *Prelude_Show_firstCharIs
(
    Value * var_0
,   Value * var_1
)
{
    Value *tmp_74 = NULL;                                    // Prelude.Show:99:33--99:39
    if (! strcmp("", ((Value_String *)var_1)->str)) {
        idris2_removeReference(var_0);
        idris2_removeReference(var_1);
        tmp_74 = idris2_mkBits8(UINT8_C(0));
    } else {
        Value *primVar_75 = head(var_1);
        idris2_removeReference(var_1);
        Value * var_2 = primVar_75;                          // Prelude.Show:99:1--99:47
        tmp_74 = idris2_tailcall_apply_closure(var_0, var_2);
    }
    return tmp_74;
}


// Prelude.Show.User Constructor tag Just 4 arity 1
// Prelude.Show.PrefixMinus Constructor tag Just 5 arity 0
// Prelude.Show.Open Constructor tag Just 0 arity 0
// Prelude.Show.Equal Constructor tag Just 1 arity 0
// Prelude.Show.Dollar Constructor tag Just 2 arity 0
// Prelude.Show.Backtick Constructor tag Just 3 arity 0
// Prelude.Show.App Constructor tag Just 6 arity 0
Value *Prelude_IO_prim__putStr
(
      Value *var_1
    , Value *var_2
)
{
     // ffi call to idris2_putStr
    idris2_putStr(((Value_String*)var_1)->str);
    idris2_removeReference(var_1);
    idris2_removeReference(var_2);
    return NULL;
}
Value *PrimIO_unsafePerformIO
(
    Value * var_0
)
{
    Value *closure_76 = (Value *)idris2_mkClosure((Value *(*)())PrimIO_unsafePerformIO_0, 2, 1);
                                                             // PrimIO:106:27--106:28
    ((Value_Closure*)closure_76)->args[0] = var_0;
    Value * var_1 = closure_76;                              // PrimIO:106:7--106:24
    Value *closure_77 = (Value *)idris2_mkClosure((Value *(*)())PrimIO_unsafeCreateWorld, 1, 1);
                                                             // PrimIO:106:7--106:24
    ((Value_Closure*)closure_77)->args[0] = var_1;
    return closure_77;
}


Value *PrimIO_unsafePerformIO_0
(
    Value * var_0
,   Value * var_1
)
{
    Value * var_2 = idris2_apply_closure(var_0, var_1);      // PrimIO:14:30--14:37
    return var_2;
}


Value *PrimIO_unsafeCreateWorld
(
    Value * var_0
)
{
    Value * var_1 = (Value*)NULL;                            // PrimIO:97:1--97:53
    return idris2_tailcall_apply_closure(var_0, var_1);
}



// main function
int main(int argc, char *argv[])
{
    idris2_setArgs(argc, argv);
    Value *mainExprVal = __mainExpression_0();
    idris2_trampoline(mainExprVal);
    return 0; // bye bye
}
5
